@model IEnumerable<ASM1.Repository.Models.TestDrive>

@{
    ViewData["Title"] = "Lịch lái thử của tôi";
    Layout = "_Layout";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="h3">
                        <i class="fas fa-calendar-check text-primary me-2"></i>
                        Lịch lái thử của tôi
                    </h2>
                    <p class="text-muted">Theo dõi và quản lý lịch lái thử xe của bạn</p>
                </div>
                <div>
                    <a href="@Url.Action("ScheduleTestDrive")" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i> Đặt lịch mới
                    </a>
                </div>
            </div>

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Test Drives List -->
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-list me-2"></i>
                        Danh sách lịch lái thử
                        @if (ViewBag.CustomerName != null)
                        {
                            <small class="text-muted">- @ViewBag.CustomerName</small>
                        }
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.Message != null)
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-info-circle me-2"></i> @ViewBag.Message
                            <br>
                            <a href="@Url.Action("ScheduleTestDrive")" class="btn btn-primary mt-3">
                                <i class="fas fa-plus me-1"></i> Đặt lịch lái thử đầu tiên
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Mã lịch</th>
                                        <th>Xe</th>
                                        <th>Ngày lái thử</th>
                                        <th>Giờ</th>
                                        <th>Trạng thái</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var testDrive in Model)
                                    {
                                        <tr class="test-drive-row" data-status="@testDrive.Status">
                                            <td>
                                                <span class="fw-bold text-primary">#TD@(testDrive.TestDriveId.ToString("000"))</span>
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@testDrive.Variant.VehicleModel.Name</strong>
                                                    <br>
                                                    <small class="text-muted">@testDrive.Variant.Version - @testDrive.Variant.Color</small>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="fw-semibold">
                                                    @(testDrive.ScheduledDate?.ToString("dd/MM/yyyy") ?? "Chưa xác định")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">
                                                    @(testDrive.ScheduledTime?.ToString("HH:mm") ?? "Chưa xác định")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(testDrive.Status ?? "Unknown")">
                                                    @GetStatusText(testDrive.Status ?? "Unknown")
                                                </span>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    @if (testDrive.Status == "Scheduled" || testDrive.Status == "Confirmed")
                                                    {
                                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                                onclick="cancelTestDrive(@testDrive.TestDriveId)"
                                                                title="Hủy lịch">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    }
                                                    @if (testDrive.Status == "Completed")
                                                    {
                                                        <a href="@Url.Action("SubmitFeedback", new { testDriveId = testDrive.TestDriveId })" 
                                                           class="btn btn-outline-success btn-sm" title="Gửi đánh giá">
                                                            <i class="fas fa-star"></i>
                                                        </a>
                                                    }
                                                    <button type="button" class="btn btn-outline-info btn-sm" 
                                                            onclick="viewTestDriveDetails(@testDrive.TestDriveId)"
                                                            title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Scheduled" => "bg-warning text-dark",
            "Confirmed" => "bg-info",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            "In Progress" => "bg-primary",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status switch
        {
            "Scheduled" => "Đã đặt lịch",
            "Confirmed" => "Đã xác nhận",
            "Completed" => "Hoàn thành",
            "Cancelled" => "Đã hủy",
            "In Progress" => "Đang thực hiện",
            _ => "Không xác định"
        };
    }
}

<script>
    function cancelTestDrive(testDriveId) {
        if (confirm('Bạn có chắc chắn muốn hủy lịch lái thử này không?')) {
            fetch(`/CustomerService/CancelTestDrive/${testDriveId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra khi hủy lịch lái thử');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi hủy lịch lái thử');
            });
        }
    }

    function viewTestDriveDetails(testDriveId) {
        // Có thể mở modal hoặc redirect đến trang chi tiết
        window.location.href = `/CustomerService/TestDriveDetails/${testDriveId}`;
    }

    // Style cho các hàng dựa trên trạng thái
    document.addEventListener('DOMContentLoaded', function() {
        const rows = document.querySelectorAll('.test-drive-row');
        rows.forEach(row => {
            const status = row.getAttribute('data-status');
            switch(status) {
                case 'Completed':
                    row.style.backgroundColor = '#f8f9fa';
                    break;
                case 'Cancelled':
                    row.style.opacity = '0.6';
                    break;
            }
        });
    });
</script>

<style>
    .test-drive-row:hover {
        background-color: #f8f9fa !important;
    }
    
    .btn-group-sm .btn {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
    }
</style>